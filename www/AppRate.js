// Generated by CoffeeScript 1.6.3
var AppRate, channel, locales, preferences;

channel = require("cordova/channel");

preferences = require("./preferences");

locales = require("./locales");

AppRate = function() {
  var thisObj;
  thisObj = this;
  this.rate_app = parseInt(window.localStorage.getItem("rate_app") || 1);
  this.rate_app_counter = parseInt(window.localStorage.getItem("rate_app_counter") || 0);
  this.openRateWindow = function() {
    if (/(iPhone|iPod|iPad)/i.test(navigator.userAgent.toLowerCase())) {
      return window.open("itms-apps://ax.itunes.apple.com/WebObjects/MZStore.woa/wa/viewContentsUserReviews?type=Purple+Software&id=" + preferences.app_id.ios);
    } else if (/(Android)/i.test(navigator.userAgent.toLowerCase())) {
      return window.open("market://details?id=" + preferences.app_id.android);
    } else if (/(BlackBerry)/i.test(navigator.userAgent.toLowerCase())) {
      return window.open("http://appworld.blackberry.com/webstore/content/" + preferences.app_id.blackberry);
    }
  };
  this.rate = function(buttonIndex) {
    switch (buttonIndex) {
      case 1:
        thisObj.rate_stop();
        return setTimeout(thisObj.openRateWindow, 250);
      case 2:
        return thisObj.rate_reset();
      case 3:
        return thisObj.rate_stop();
    }
  };
  this.rate_stop = function() {
    window.localStorage.setItem("rate_app", 0);
    return window.localStorage.removeItem("rate_app_counter");
  };
  this.rate_reset = function() {
    return window.localStorage.setItem("rate_app_counter", 0);
  };
  this.rate_try = function(locale) {
    var localeObj;
    localeObj = locales[locale] || locales.en;
    if (thisObj.rate_app_counter === preferences.rate_count_max && thisObj.rate_app !== 0) {
      return navigator.notification.confirm(localeObj.message, thisObj.rate, localeObj.title, localeObj.buttonLabels);
    } else if (thisObj.rate_app_counter < preferences.rate_count_max) {
      thisObj.rate_app_counter++;
      return window.localStorage.setItem("rate_app_counter", thisObj.rate_app_counter);
    }
  };
  return channel.onCordovaReady.subscribe(function() {
    if (navigator.notification && navigator.globalization) {
      return navigator.globalization.getPreferredLanguage(function(language) {
        return thisObj.rate_try(language.value.split(/_/)[0]);
      }, function() {
        return thisObj.rate_try("en");
      });
    }
  });
};

module.exports = new AppRate();
